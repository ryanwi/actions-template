name: Build and pushing docker
description: Buld and push image to SignalWire registry

inputs:
  PROJECT_NAME:
    required: true
  PUSH:
    required: false
    default: "no"

runs:
  using: "composite"
  steps:
    - name: Configure buildx
      run: export DOCKER_CLI_EXPERIMENTAL=enabled
      shell: bash

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          signalwire/${{ inputs.PROJECT_NAME }}
        # generate Docker tags based on the following events/attributes
        tags: |
          type=schedule
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=sha

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Build and export to Docker
      uses: docker/build-push-action@v3
      with:
        load: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test
      if: github.event_name == 'pull_request'
      id: test
      shell: bash
      run: |
        docker run -d --rm --name test ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        sleep 20
        docker logs test > logs.txt
        EXECUTIONLOG=$(cat logs.txt)
        EXECUTIONLOG="${EXECUTIONLOG//'%'/'%25'}"
        EXECUTIONLOG="${EXECUTIONLOG//$'\n'/'%0A'}"
        EXECUTIONLOG="${EXECUTIONLOG//$'\r'/'%0D'}"
        echo "::set-output name=container-logs::$EXECUTIONLOG"
    
    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        LOGPRINT: "${{ steps.test.outputs.container-logs }}"
      with:
        github-token: ${{ env.GITHUB_TOKEN }}
        script: |
          const output = `#### Container logs are listed bellow üìù\`

          <details><summary>Show Logs</summary>

          \`\`\`\n
          ${process.env.LOGPRINT}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Build and push
      if: ${{ inputs.PUSH }} == "yes"
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max