name: Ruby Unit Test
description: Ruby Unit Test report


inputs:
  RUBY_VERSION:
    required: false
    default: "2.7.6"
    description: "Default Ruby version"
  ENV_PATH: 
    description: 'The .env file for CI.'
    required: false
  RUBY_RAKE_COMMANDS:
    required: false
    description: A comma-separated list of rake commands.

runs:
  using: "composite"
  steps:
    - name: Setup dependencies
      run: sudo apt update ; sudo apt install libpq-dev -y
      shell: bash

    - uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Setup Ruby and install gems
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: ${{ inputs.RUBY_VERSION }}
      env:
        BUNDLE_GEMS__CONTRIBSYS__COM: ${{ env.CONTRIBSYS_CREDENTIALS }}

    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Linting
      run: |
        bin/rails zeitwerk:check
        bundle exec brakeman --skip-files bundle/ -q -w2
        gem install rubocop
        git fetch --all
        git diff --name-only origin/master --diff-filter=d -- '*.rb'  | xargs -r rubocop -c .rubocop.yml
      shell: bash

    - name: .env for ci
      if: inputs.ENV_PATH != null
      run: cp $ENV_PATH .env
      shell: bash
      env:
        ENV_PATH: ${{ inputs.ENV_PATH }}

    - name: Split the input variable into an array
      if: inputs.RUBY_RAKE_COMMANDS != null
      env:
        arr: ${{ inputs.RUBY_RAKE_COMMANDS }}
      run: |
        IFS=',' read -ra arr <<< "$arr"
        for i in "${arr[@]}"; do
          if [[ $i == bundle* ]]; then
            $i
          fi
        done
      shell: bash

    - name: Run Tests
      run: |
        bundle exec rspec -f j -o tmp/rspec_results.json -f p
      shell: bash
      env:
        CONTRIBSYS_CREDENTIALS: ${{ env.CONTRIBSYS_CREDENTIALS }}
    
    - name: RSpec Report
      if: always()
      uses: SonicGarden/rspec-report-action@v2
      with:
        token: ${{ env.GITHUB_TOKEN }}
        json-path: tmp/rspec_results.json
