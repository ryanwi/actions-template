# This is a basic workflow to help you get started with Actions

name: CI checking

# Controls when the workflow will run
on:

  workflow_call:
    inputs:
      PROJECT_NAME:
        required: true
        type: string
      BUILD_BREAKER:
        required: false
        type: string
        default: "yes"
      DOTNET-VERSION:
        required: false
        default: "3.1.402"
        type: string
      LANGUAGE:
        required: true
        default: "JavaScript"
        type: string
      NODE_VERSION:
        required: false
        default: "19"
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN: 
        required: true
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  ci:
    # The type of runner that the job will run on
    runs-on: [ self-hosted ]
    name: CI_CHECK

    steps:
    - name: Checkout actions
      uses: actions/checkout@v3
      with:
        repository: signalwire/actions-template
        ref: dev

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Test JS
      if: ${{ inputs.LANGUAGE }} == "JavaScript"
      uses: ./.github/actions/test-javascript
      with:
        NODE_VERSION: ${{ inputs.NODE_VERSION }}


    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      if: ${{ !env.ACT }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        
    - name: SonarQube Quality Gate check
      if: ${{ !env.ACT }}
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      with:
        timeout-minutes: 5
      env:
       SONAR_TOKEN: ${{ env.SONAR_TOKEN }}
