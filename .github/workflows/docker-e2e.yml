# This is a basic workflow to help you get started with Actions

name: Docker build/Push & deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_call:
    inputs:
      PROJECT_NAME:
        required: true
        type: string
      PUSH:
        required: false
        type: string
      # PR_MESSAGE:
      #   required: false
      #   type: boolean
      #   default: false
      # SWARM_DEPLOY:
      #   required: true
      #   type: boolean
      #   default: false
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      ENDPOINTID:
        required: false
      PORTAINER_API_KEY:
        required: false
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  dev:
    # The type of runner that the job will run on
    runs-on: [ ubuntu-latest]
    name: Dev

    outputs:
      imagetag: ${{ steps.meta.outputs.tags }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout actions
      uses: actions/checkout@v3
      with:
        repository: signalwire/actions-template
        ref: dev

    - uses: ./.github/actions/docker
      name: Docker build & push
      id: dockerbp
      with:
        PROJECT_NAME: ${{ inputs.PROJECT_NAME }}
        PUSH: ${{ inputs.PUSH }}
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: ./.github/actions/trivy
      name: Trivy Docker Scan
      with: 
        IMAGE: ${{ steps.dockerbp.outputs.imagetag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - uses: ./.github/actions/code-scan
      name: Code Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # ASOC_KEY: ${{ secrets.ASOC_KEY }}
        # ASOC_SECRET: ${{ secrets.ASOC_SECRET }}
        